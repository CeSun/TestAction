name: Build Nuget Packages

on:
  push:
    branches: [ main, 'v[0-9].**' ]
  pull_request:
    branches: [ main, 'v[0-9].**' ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        filter: tree:0
    - name: Install upx
      run: sudo apt-get update && sudo apt-get install upx -y
      
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    # 下载windows平台的llvm
    - name: download llvm
      uses: wei/wget@v1
      with:
        args: -O clang.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.0/clang+llvm-20.1.0-x86_64-pc-windows-msvc.tar.xz 
    # 解压llvm
    - name: unzip llvm
      uses: developerdino/action-tar@v1
      with:
        args: tar -xvf  clang.tar.xz
    # 下载windows平台zig
    - name: download zig
      uses: wei/wget@v1
      with:
        args: -O zig.zip https://ziglang.org/builds/zig-windows-x86_64-0.15.0-dev.379+ffd85ffcd.zip

    # 解压zig
    - name: unzip zig
      uses: somaz94/compress-decompress@v1
      with:
        command: decompress
        source: ./zig.zip
        format: zip
        dest: './zig'

    # 复制文件到指定目录
    - name: cp win-x64 bin files
      run: |
        mkdir -p ./src/PublishAotCross.Compiler.win-x64/bin
        cp -r ./clang+llvm-20.1.0-x86_64-pc-windows-msvc/bin/llvm-objcopy.exe ./src/PublishAotCross.Compiler.win-x64/bin/llvm-objcopy.exe
        cp -r ./zig/zig-windows-x86_64-0.15.0-dev.379+ffd85ffcd/* ./src/PublishAotCross.Compiler.win-x64/bin
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/tsan
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libcxxabi
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libcxx
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libc/darwin
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libc/glibc
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libc/include
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libc/mingw
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libc/wasi
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/libc/include
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/wasi
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/fuzzer
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/docs
        rm -rf ./src/PublishAotCross.Compiler.win-x64/bin/lib/doc
      
    # 压缩upx
    - name: upx exe
      run: upx -9 ./src/PublishAotCross.Compiler.win-x64/bin/zig.exe
    
    # 打nuget包
    - name: pack nugets
      run: dotnet build -t:Pack src/PublishAotCross.Compiler.win-x64/PublishAotCross.Compiler.win-x64.nuproj -o ./packages -p:Version=0.0.0-alpha.${{github.run_number}} --property PackageCompressionLevel=Optimal
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: packages

 # 下载Linux平台zig
    - name: download zig
      uses: wei/wget@v1
      with:
        args: -O zig.zip https://ziglang.org/builds/zig-linux-x86_64-0.15.0-dev.386+2e35fdd03.tar.xz

    # 解压zig
    - name: unzip zig
      uses: somaz94/compress-decompress@v1
      with:
        command: decompress
        source: ./zig.zip
        format: zip
        dest: './zig'

 # 复制文件到指定目录
    - name: cp linux-x64 bin files
      run: |
        mkdir -p ./src/PublishAotCross.Compiler.linux-x64/bin
        cp -r ./zig/zig-linux-x86_64-0.15.0-dev.386+2e35fdd03/* ./src/PublishAotCross.Compiler.linux-x64/bin
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/tsan
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libcxxabi
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libcxx
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libc/darwin
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libc/glibc
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libc/include
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libc/mingw
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libc/wasi
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/libc/include
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/wasi
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/fuzzer
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/docs
        rm -rf ./src/PublishAotCross.Compiler.linux-x64/bin/lib/doc
 # 压缩upx
    - name: upx exe
      run: upx -9 ./src/PublishAotCross.Compiler.linux-x64/bin/zig

  # 打nuget包
    - name: pack nugets
      run: dotnet build -t:Pack src/PublishAotCross.Compiler.linux-x64/PublishAotCross.Compiler.linux-x64.nuproj -o ./packages -p:Version=0.0.0-alpha.${{github.run_number}} --property PackageCompressionLevel=Optimal
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: packages    

# 发布nuget
  publish-to-nuget:
      needs: build
      runs-on: ubuntu-latest
      if: github.event_name == 'push'
      steps:
        - uses: actions/download-artifact@v4
          with:
            name: packages
            path: packages
        - name: Push to NuGet
          run: |
            dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
